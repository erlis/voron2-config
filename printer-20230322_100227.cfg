[include mainsail.cfg]
[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
# [include klicky-probe.cfg]
#[include stealthburner_led.cfg]
[include config.d/*.cfg]
#[include PIS.cfg]

#####################
### MACROS FOLDER ###
#####################
[include macros/*.cfg]

###########################
### HARDWARE COMPONENTS ###
###########################
[include config.d/hardware/extruder.cfg]

# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## Spider version                       Please search this file for "SpiderVersion" and uncomment the appropriate line for each
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Fine tune E steps                    [extruder] section

[mcu]
## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper for Spider
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2D0027001951303439363932-if00
##	If you want to use the Raspberry uart0 to communicate with Spider, 
##  you need to select 'Communication interface' to 'Serial (on USART1 PA10/PA9)' 
##  in 'make menuconfig' when you compile klipper and set the serial as below
##--------------------------------------------------------------------
#serial: /dev/ttyAMA0
##--------------------------------------------------------------------

# Object Exclude
[exclude_object]


[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6400			        #Max 4000
max_z_velocity: 15			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: lagrange
relative_reference_index: 12

#####################################################################
#      X/Y Stepper Settings
#####################################################################
[stepper_x]
##	Connected to X-MOT (B Motor)
#step_pin: PE11
step_pin: PD5
#dir_pin: !PE10
dir_pin: !PD6
#enable_pin: !PE9
enable_pin: !PD4
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PB14
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 293
position_max: 293 
homing_speed: 25 #Max 100
homing_retract_dist: 0 # zero for sensorless
homing_positive_dir: true


##       Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
#uart_pin: PE7
uart_pin: PD7
interpolate: False
run_current: 0.8
#hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0
# added for sensorless homing
diag_pin: ^PA3   # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 67  # 255 is most sensitive value, 0 is least sensitive


[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PB13
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 298
position_max: 298

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False
run_current: 0.8
#hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PB13   # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 67  # 255 is most sensitive value, 0 is least sensitive


#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##  In Z- Position
# endstop_pin: ^PA0
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config

# commented out no need position_endstop with TAP
# position_endstop: -0.5
##--------------------------------------------------------------------


##	Uncomment below for 300mm build
position_max: 290


##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	In E1-MOT Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	In E2-MOT Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	In E3-MOT Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: true
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##	SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: Generic 3950 # NTC 100K MGB18-104F39050L32
sensor_pin: PB0 # TB Position
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: -270
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#	Probe
#####################################################################
[probe]
##	Inductive Probe - If you use this section , please comment the [bltouch] section
##	This probe is not used for Z height, only Quad Gantry Leveling
##	In Z+ position
##	If your probe is NC instead of NO, add change pin to ^PA3
#pin:  ^PA3
pin: ^can0:LIMIT_1
x_offset: 0
y_offset: 0   # changed because of TAP
#z_offset: 6.42
speed: 5
samples: 5
sample_retract_dist: 1.0
samples_tolerance: 0.05
samples_tolerance_retries: 5

samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

# TAP Active GCODE
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
#pin: PA13
pin: can0:FAN0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - FAN1 Connector
#pin: PA14
pin: can0:FAN1
#max_power: 0.4
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

#[heater_fan controller_fan]
##	Controller fan - FAN2 Connector
#pin: PB2
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 45.0

#[heater_fan exhaust_fan]
##  Exhaust fan - In E2 OUT Positon
#pin: PB3
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

[heater_fan nevermore]
# Nevermore - In E1 OUT Position
pin: PB3
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 65
fan_speed: 0 #1.0

#####################################################################
#	LED Control
#####################################################################

#[output_pin caselight ]
##  Chamber Lighting - In 5V-RGB Position
#pin: PD3
#pwm: true
#shutdown_value: 0
#value:100
#cycle_time: 0.01

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -100,-100 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:150, 150
#speed:100
#z_hop:10
   
[quad_gantry_level]
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25
speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[force_move]
enable_force_move: True

[homing_override]
axes: xyz
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    {% set Z_POS = printer.toolhead.position.z %}

#......Conditional Z-Hop
#      ! If the Z axis is not already homed, a full homed sequence will be run. If this is not desired, comment out the below line with !!!!!
#      The 'Safety On' line below crudely gets around the issue of a false homed state when either 'set_position_z: 0.0' or 'SET_KINEMATIC_POSITION Z=0'
#      The problem is that if either of these commands are issued, and the Z axis is not currently homed, it will now register as homed and potentially cause
#      issues with that false homed state later. Conditional flags could be set on the onset, saving which axes were already homed before using
#      'SET_KINEMATIC_POSITION Z=0' to then be followed by logic to execute M18 [AXIS that wasn't homed] to reflect the true state of things, but klipper
#      M18/M84 does not take axis flag - it's all or nothing.

    {% if "z" not in printer.toolhead.homed_axes %} ; Check if Z not already homed
        {% set home_all = 'Safety On' %} ; !!!!! THIS WILL HOME ALL AXIS IF Z IS NOT HOMED, COMMENT OUT IF THIS IS NOT DESIRED !!!!!
        SET_KINEMATIC_POSITION Z=0
        G0 Z10 F3600 ; Raise toolhead 10mm since unknown/not homed
      {% else %}
        {% if Z_POS < 10 %}
            G90
            G0 Z10 ; Make sure Z height is at least 10mm
          {% else %}
            G91
            G0 Z1 F3600 ; If Z was above 10mm, raise by 1mm for safety
            G90
        {% endif %}
    {% endif %} 


#......Sort X
    {% if home_all or 'X' in params %}
      _HOME_X
    {% endif %}
  
#......Sort Y
    {% if home_all or 'Y' in params %}
      _HOME_Y
    {% endif %}
  
#......Sort Z
    {% if home_all or 'Z' in params %}
      G90
      G0 X{X_MID} Y{Y_MID} F4000
      G28 Z
      G1 Z10
    {% endif %}


#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC7,^PC6
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 3 = display, Index 1 and 2 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=0.1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.8 GREEN=0.8 BLUE=0.8 INDEX=3 

#--------------------------------------------------------------------
##############################################
#Daylights
[output_pin caselight]
pin: PC8
pwm: True
cycle_time: 0.01

##########################################

#####################################################################

    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.190
#*# pid_ki = 1.232
#*# pid_kd = 311.558
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 13.951
#*# pid_ki = 0.628
#*# pid_kd = 77.428
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 38.2
#*#
#*# [probe]
#*# z_offset = -0.860
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.153750, -0.037500, 0.031250, 0.007500, -0.092500
#*# 	-0.126250, -0.036250, 0.036250, -0.008750, -0.107500
#*# 	-0.115000, -0.003750, 0.000000, -0.025000, -0.091250
#*# 	-0.085000, -0.010000, 0.020000, -0.013750, -0.073750
#*# 	-0.111250, -0.022500, -0.033750, -0.041250, -0.120000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
